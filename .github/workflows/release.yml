name: Release
permissions:
  contents: write
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0). Leave blank to use TOC version.'
        required: false
        type: string

jobs:
  build-zip:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Determine version
        id: v
        shell: bash
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            tag="${GITHUB_REF_NAME}"
            tag="${tag#v}"
            echo "VER=$tag" >> $GITHUB_OUTPUT
          elif [[ -n "${{ inputs.version }}" ]]; then
            echo "VER=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            toc_ver=$(grep -E "^## Version:" MaxDps_PriorityIcon/MaxDps_PriorityIcon.toc | sed -E 's/^## Version:[[:space:]]*//')
            echo "VER=${toc_ver}" >> $GITHUB_OUTPUT
          fi

      - name: Verify .toc version matches tag
        run: |
          toc_ver=$(grep -E "^## Version:" MaxDps_PriorityIcon/MaxDps_PriorityIcon.toc | sed -E 's/^## Version:[[:space:]]*//')
          if [ "$toc_ver" != "${{ steps.v.outputs.VER }}" ]; then
            echo "TOC version ($toc_ver) != tag (${{ steps.v.outputs.VER }})"; exit 1
          fi

      - name: Build zip
        run: |
          zip -r -X "MaxDps_PriorityIcon-${{ steps.v.outputs.VER }}.zip" MaxDps_PriorityIcon \
            -x "MaxDps_PriorityIcon/.git/*" "**/.DS_Store"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ steps.v.outputs.VER }}'
          name: 'v${{ steps.v.outputs.VER }}'
          target_commitish: ${{ github.sha }}
          files: 'MaxDps_PriorityIcon-${{ steps.v.outputs.VER }}.zip'
          token: ${{ secrets.GITHUB_TOKEN }}
